#!/bin/bash
#
# pkgwatch v0.5 - Arch out of date package notifier.
# Copyright (C) 2009 Daniel J Griffiths <ghost1227@archlinux.us>
# Thanks to:
#            Wonder & Louipc for the initial idea
#            Rson for helping track down the bugs in 0.2
#                 and submitting a good bit of code cleanup
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

VER=0.5
NOTIFY=0
INFO="\e[1;33m==>\e[1;37m"
ERROR="\e[1;31m==>\e[1;37m"
SUCCESS="\e[1;32m==>\e[1;37m"
RESET="\e[0m"

BASE_URL="http://aur.archlinux.org/packages.php?O=0&do_Search=Go&detail=1&L=2&C=0&SeB=m&SB=n&SO=a&PP=100"
unset USER

if [ -f /tmp/pkgwatch ]; then
	rm -f /tmp/pkgwatch
fi

##############################
### VERSION FUNCTION       ###
##############################
version() {
	echo "pkgwatch v${VER}"
}

##############################
### USAGE FUNCTION         ###
##############################
usage() {
	version
	echo
	echo "pkgwatch [option]"
	echo "	-h, --help	Display help and exit"
	echo "	-v, --version	Display version and exit"
	echo "	-n, --notify	Output to notification daemon"
}

##############################
### GET FUNCTION           ###
##############################
get() {
	if [ -z "${USER}" ]; then
		if [ -f ${XDG_CONFIG_HOME}/pkgwatch/pkgwatchrc ]; then
			source ${XDG_CONFIG_HOME}/pkgwatch/pkgwatchrc
		elif [ -f ${HOME}/.pkgwatchrc ]; then
			source ${HOME}/.pkgwatchrc
		fi
	fi

	if [ -z "${USER}" ]; then
		echo -e "${ERROR} Missing configuration information!"
		echo -e "${ERROR} Please pass a username or set \"USER=username\" in your config.${RESET}"
		exit 1
	fi

	TOTAL=$(wget -q -O - "${BASE_URL}&K=${USER}&outdated=on" | sed -r "s/.*Showing results.*of ([0-9]+).*/\1/;t;d")

	if [ -z "${TOTAL}" ]; then
		SINGLE=$(wget -q -O - "${BASE_URL}&K=${USER}&outdated=on" | sed -r "s/.*class='f2'>([^<]*).*/\1/;t;d")

		if [ -z "${SINGLE}" ]; then
			EXIST=$(wget -q -O - "${BASE_URL}&K=${USER}" | grep "No packages")
			if [ -z "${EXIST}" ]; then
				echo -e "${SUCCESS} No packages out of date!${RESET}"
				exit 0
			else
				echo -e "${ERROR} User '${USER}' does not exist!${RESET}"
				exit 1
			fi
		else
			echo ${SINGLE} >> /tmp/pkgwatch
		fi
	else
		OFFSET=0
		while [ ${OFFSET} -lt ${TOTAL} ]; do
			wget -q -O - "${BASE_URL}0=${OFFSET}&K=${USER}&outdated=on" | sed -r "s/.*class='f4'>[^>]*>[^>]*>([^<]*).*/\1/;t;d" >> /tmp/pkgwatch
			let OFFSET=OFFSET+100
		done
	fi

	if [ ${NOTIFY} -eq 1 ]; then
		OOD=$(< /tmp/pkgwatch)
		notify-send "Out of date packages:" "${OOD}"
	else
		echo -e "${INFO} The following packages are marked out of date:"
		echo -e "`cat /tmp/pkgwatch`${RESET}"
	fi

	exit 0
}

##############################
### GET RUNTIME ARGS       ###
##############################

while [ "$#" -ne "0" ]; do
	case ${1} in
		'-n'|'--notify')
		let NOTIFY=1
		;;
		'-h'|'--help')
		usage
		exit 0
		;;
		'-v'|'--version')
		version
		exit 0
		;;
		*)
		USER=${1}
		;;
	esac
	shift
done

get

exit 0


